---
# Create security group
- name: Create security groups for Jenkins
  ec2_group:
    name: "jenkins-access-{{ deployment.region }}"
    description: "Security group to control jenkins access"
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    region: "{{ deployment.region }}"
    vpc_id: "{{ jenkins_vpc.vpc_id }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 50000
        to_port: 50000
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: jenkins_security

######################
# Jenkins nodes
######################

# Create the database stack
- name: Create the EC2 instances for jenkins
  ec2:
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    instance_type: "{{ buildbox_instance_type }}"
    image: "{{ deployment.jenkins.ami_id }}"
    wait: yes
    region: "{{ target_region }}"
    assign_public_ip: yes
    vpc_subnet_id: "{{ item.1.subnet_id }}"
    group_id:
      - "{{ jenkins_security.group_id }}"
    instance_tags:
      Name: "Jenkins"
      Type: "JenkinsBot"
      Environment: "{{ deployment.environment }}"
      Deployment-Group: "{{ deployment.group }}"
    exact_count: "{{ item.0.ensure_count }}"
    count_tag: 
      Type: JenkinsBot
      Environment: "{{ deployment.environment }}"
      Deployment-Group: "{{ deployment.group }}"
    zone: "{{ item.0.zone }}"
    key_name: "{{ buildbox_ssh_key_name }}"
  register: jenkins_boxes
  with_nested: 
    - "{{ deployment.jenkins.azs }}"
    - "{{ subnets_to_azs }}"
  when: item.0.zone == item.1.zone

# Add hosts to the list for processing.
- name: Add Jenkins boxes to host inventory
  add_host:
    hostname: "{{ item.1.public_dns_name }}"
    groups: jenkins
    private_ip: "{{ item.1.private_ip }}"
    ansible_user: "{{ ec2_ssh_user }}"
    ansible_ssh_private_key_file: "{{ buildbox_ssh_key_path }}"
  with_subelements:
    - "{{ jenkins_boxes.results }}"
    - tagged_instances

# Wait for SSH to come up
- name: Wait for SSH to come up on the jenkins boxes
  wait_for:
    host: "{{ item.1.public_dns_name }}"
    port: 22
    timeout: 320
    state: started
    search_regex: OpenSSH
    delay: 10
  with_subelements:
    - "{{ jenkins_boxes.results }}"
    - tagged_instances